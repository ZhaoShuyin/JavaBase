package test.other;

/**
 * @Title 指令发送工具类
 * @date 2020/5/11
 * @autor Zsy
 */
public class InstructUtil {

    /**
     * 默认帧头字节数组
     */
    private static byte[] defByte() {
        byte[] bytes = new byte[22];
        //发送命令帧头
        bytes[0] = 0x41;
        bytes[1] = 0x49;
        bytes[2] = 0x4b;
        bytes[3] = 0x44;
        return bytes;
    }

    /**
     * 握手 0x05
     */
    public static byte[] connectByte() {
        return new byte[]{0x41, 0x49, 0x4B, 0x44, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e};
    }

    /**
     * 接收数据12导
     *
     * @return
     */
    public static byte[] receive12() {
        return new byte[]{0x41, 0x49, 0x4B, 0x44, 0x15, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30};
    }

    /**
     * 接收数据18导
     *
     * @return
     */
    public static byte[] receive18() {
        return new byte[]{0x41, 0x49, 0x4B, 0x44, 0x15, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32};
    }


    /**
     * 停止接收数据
     *
     * @return
     */
    public static byte[] stop() {
        return new byte[]{0x41, 0x49, 0x4B, 0x44, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e};
    }

    /**
     * 开启滤波
     *
     * @return
     */
    public static byte[] filterOpen() {
        return new byte[]{0x41, 0x49, 0x4B, 0x44, 0x25, 0x01, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42};
    }


    /**
     * 关闭滤波
     *
     * @return
     */
    public static byte[] filterClose() {
        return new byte[]{0x41, 0x49, 0x4B, 0x44, 0x25, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41};
    }


    public static String calculate(byte[] bytes) {
        int total = 0;
        for (int i = 0; i < 21; i++) {
            total += bytes[i];
        }
        return Integer.toHexString(total % 0xff);
    }


    public static void main(String[] args) {
        System.out.println(calculate(stop()));
        System.out.println(calculate(connectByte()));
        System.out.println(calculate(receive12()));
        System.out.println(calculate(receive18()));
    }

}
